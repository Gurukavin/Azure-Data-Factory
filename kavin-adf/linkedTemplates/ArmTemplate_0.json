{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "kavin-adf"
		},
		"Blobsource_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Blobsource'"
		},
		"Incremental_raw_blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Incremental_raw_blob'"
		},
		"sink_sql_server_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'sink_sql_server'"
		},
		"httpgit_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/"
		},
		"sink_sql_server_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "kavinsql.database.windows.net"
		},
		"sink_sql_server_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "kavin_db"
		},
		"sink_sql_server_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Adminkavin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Blobsource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Scheduled trigger",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Blobsource_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Incremental_raw_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Incremental_raw_blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/httpgit')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('httpgit_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sink_sql_server')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('sink_sql_server_properties_typeProperties_server')]",
					"database": "[parameters('sink_sql_server_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('sink_sql_server_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('sink_sql_server_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/car_data_git')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "httpgit",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "anshlambagit/Azure-DE-Project-Resources/refs/heads/main/Raw%20Data/SalesData.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/httpgit')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/raw_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Incremental_raw_blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "rawdata",
						"container": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Incremental_raw_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rawfile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blobsource",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filepath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().filepath",
							"type": "Expression"
						},
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Retailer",
						"type": "String"
					},
					{
						"name": "Retailer ID",
						"type": "String"
					},
					{
						"name": "Invoice Date",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "Price per Unit",
						"type": "String"
					},
					{
						"name": "Units Sold",
						"type": "String"
					},
					{
						"name": "Total Sales",
						"type": "String"
					},
					{
						"name": "Operating Profit",
						"type": "String"
					},
					{
						"name": "Operating Margin",
						"type": "String"
					},
					{
						"name": "Sales Method",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blobsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sink_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sink_sql_server",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().Tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sink_sql_server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/text')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blobsource",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filepath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().filepath",
							"type": "Expression"
						},
						"container": "source"
					},
					"columnDelimiter": {
						"value": "^",
						"type": "Expression"
					},
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blobsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copt_git')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_git",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Branch_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Branch_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Dealer_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dealer_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Model_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Revenue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Revenue",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Units_Sold",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Units_sold",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Date_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Day",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Day",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DealerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DealerName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "car_data_git",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sink_db",
								"type": "DatasetReference",
								"parameters": {
									"Tablename": {
										"value": "@pipeline().parameters.Tablename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-08-03T05:21:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/car_data_git')]",
				"[concat(variables('factoryId'), '/datasets/sink_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incremental_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lastload",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from watermark",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sink_db",
								"type": "DatasetReference",
								"parameters": {
									"Tablename": "watermark"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "updateload",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(Date_ID) as new_load from source_car_data",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sink_db",
								"type": "DatasetReference",
								"parameters": {
									"Tablename": "source_car_data"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Incremental_copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "updateload",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lastload",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from source_car_data where Date_ID > '@{activity('Lastload').output.value[0].lastload}' and Date_ID < '@{activity('updateload').output.value[0].new_load}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sink_db",
								"type": "DatasetReference",
								"parameters": {
									"Tablename": "source_car_data"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "raw_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "update_procedure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Incremental_copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[update_watermark]",
							"storedProcedureParameters": {
								"newload": {
									"value": {
										"value": "@activity('updateload').output.value[0].new_load",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sink_sql_server",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-08-03T05:48:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sink_db')]",
				"[concat(variables('factoryId'), '/datasets/raw_parquet')]",
				"[concat(variables('factoryId'), '/linkedServices/sink_sql_server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/scheduled triger pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "rawfile",
								"type": "DatasetReference",
								"parameters": {
									"filepath": "rawfiles"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@endswith(item().name,'.csv')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Scheduled_triger_copy2",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"wildcardFolderPath": {
																"value": "@pipeline().parameters.filesource",
																"type": "Expression"
															},
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "text",
														"type": "DatasetReference",
														"parameters": {
															"filepath": "@pipeline().parameters.filesource"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "text",
														"type": "DatasetReference",
														"parameters": {
															"filepath": {
																"value": "@{pipeline().parameters.filedest}\\txt\\",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Scheduled_triger_copy1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFolderPath": {
																"value": "@pipeline().parameters.filesource",
																"type": "Expression"
															},
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "rawfile",
														"type": "DatasetReference",
														"parameters": {
															"filepath": {
																"value": "@pipeline().parameters.filesource",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "rawfile",
														"type": "DatasetReference",
														"parameters": {
															"filepath": {
																"value": "@{pipeline().parameters.filedest}\\CSV\\",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"filesource": {
						"type": "string"
					},
					"filedest": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/rawfile')]",
				"[concat(variables('factoryId'), '/datasets/text')]"
			]
		}
	]
}